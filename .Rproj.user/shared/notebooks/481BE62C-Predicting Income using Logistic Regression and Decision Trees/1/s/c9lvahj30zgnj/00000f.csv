"0","weight_vector <- ifelse(train_data$income == ""1"", "
"0","                        (nrow(train_data) / 2) / sum(train_data$income == ""1""),"
"0","                        (nrow(train_data) / 2) / sum(train_data$income == ""0""))"
"0",""
"0","model_lr_weighted <- glm(income ~ ., data = train_data, family = ""binomial"", weights = weight_vector)"
"2","Warning: non-integer #successes in a binomial glm!"
"2","Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred"
"0","## Warning in eval(family$initialize): non-integer #successes in a binomial glm!"
"0","## Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred"
"0","# Predict on test data"
"0","predictions_lr_weighted <- predict(model_lr_weighted, newdata = test_data, type = ""response"")"
"0",""
"0","# Convert probabilities to class labels"
"0","predicted_labels_lr_weighted <- ifelse(predictions_lr_weighted > 0.5, ""1"", ""0"")"
"0",""
"0","# Create confusion matrix for weighted model"
"0","confusion_matrix_lr_weighted <- table(Predicted = predicted_labels_lr_weighted, Actual = test_data$income)"
"0",""
"0","# Calculate total error for weighted model"
"0","total_error_lr_weighted <- 1 - sum(diag(confusion_matrix_lr_weighted)) / sum(confusion_matrix_lr_weighted)"
"0",""
"0","print(paste(""Total error (Weighted Logistic Regression):"", total_error_lr_weighted))"
"1","[1]"
"1"," ""Total error (Weighted Logistic Regression): 0.199017199017199"""
"1","
"
"0","## [1] ""Total error (Weighted Logistic Regression): 0.199017199017199"""
